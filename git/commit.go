package git

import (
	"fmt"
	"strings"
	"time"

	"gopkg.in/src-d/go-git.v4"
)

// CallbackAddAndCommit defines the callback to add and commit files
type CallbackAddAndCommit func(files []string, msg string, step int) error

// AddFilesAndCommit adds files to repository and commits them. Cannot be uses until Setup() is executed
func AddFilesAndCommit(files []string, msg string, step int) error {
	workTree, err := repo.Worktree()
	if err != nil {
		return err
	}

	for _, file := range files {
		file = strings.Trim(strings.Replace(file, rootPath, "", -1), "/\\")
		_, err := workTree.Add(file)
		if err != nil {
			return err
		}
	}

	author.When = time.Now()
	_, err = workTree.Commit(
		fmt.Sprintf("Generated by go-project - Step %d: %s", step, msg),
		&git.CommitOptions{Author: author},
	)
	return err
}

func CommitBlackHole(_ []string, _ string, _ int) error { return nil }
